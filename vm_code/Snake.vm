function Snake.new 0
push constant 10
call Memory.alloc 1
pop pointer 0
push constant 200
call Array.new 1
pop this 0
push constant 3
pop this 1
push constant 0
pop this 2
push constant 10
pop this 3
push constant 10
pop this 4
push constant 0
pop this 7
push constant 0
pop this 8
push constant 200
pop this 9
push constant 0
push this 0
add
push this 3
push constant 32
call Math.multiply 2
push this 4
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 0
add
push this 3
push constant 1
sub
push constant 32
call Math.multiply 2
push this 4
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 0
add
push this 3
push constant 2
sub
push constant 32
call Math.multiply 2
push this 4
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Snake.generateFood 1
pop temp 0
push pointer 0
call Snake.drawInitialSnake 1
pop temp 0
push pointer 0
return
function Snake.dispose 0
push argument 0
pop pointer 0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Snake.drawInitialSnake 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 32
call Math.divide 2
pop local 1
push local 0
push this 0
add
pop pointer 1
push that 0
push local 1
push constant 32
call Math.multiply 2
sub
pop local 2
push pointer 0
push local 1
push constant 16
call Math.multiply 2
push local 2
push constant 16
call Math.multiply 2
push constant 0
not
call Snake.drawSegment 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Snake.drawSegment 0
push argument 0
pop pointer 0
push argument 3
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push argument 1
push constant 15
add
push argument 2
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Snake.generateFood 4
push argument 0
pop pointer 0
push constant 0
pop local 2
push constant 0
pop local 3
label WHILE_EXP0
push local 3
not
push local 2
push constant 50
lt
and
not
if-goto WHILE_END0
push this 3
push this 4
add
push this 7
add
push local 2
add
push constant 7
call Math.multiply 2
push constant 31
and
pop local 0
push this 3
push this 4
call Math.multiply 2
push this 7
add
push local 2
add
push constant 11
call Math.multiply 2
push constant 17
add
push constant 15
and
pop local 1
push local 0
pop this 5
push local 1
pop this 6
push pointer 0
push this 5
push this 6
call Snake.checkCollisionWithBody 3
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 3
goto IF_END0
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push local 3
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call Snake.findEmptySpot 1
pop temp 0
label IF_FALSE1
push pointer 0
call Snake.drawFood 1
pop temp 0
push constant 0
return
function Snake.findEmptySpot 3
push argument 0
pop pointer 0
push constant 0
pop local 2
push constant 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 2
not
push local 0
push constant 32
lt
and
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 2
not
push local 1
push constant 16
lt
and
not
if-goto WHILE_END1
push pointer 0
push local 0
push local 1
call Snake.checkCollisionWithBody 3
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
pop this 5
push local 1
pop this 6
push constant 0
not
pop local 2
goto IF_END0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
label IF_END0
goto WHILE_EXP1
label WHILE_END1
push local 2
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 1
add
pop local 0
label IF_FALSE1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Snake.drawFood 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 5
push constant 16
call Math.multiply 2
push constant 8
add
push this 6
push constant 16
call Math.multiply 2
push constant 8
add
push constant 6
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Snake.getDirection 0
push argument 0
pop pointer 0
push this 2
return
function Snake.checkCollisionWithBody 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 32
call Math.divide 2
pop local 1
push local 0
push this 0
add
pop pointer 1
push that 0
push local 1
push constant 32
call Math.multiply 2
sub
pop local 2
push local 1
push argument 1
eq
push local 2
push argument 2
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Snake.move 5
push argument 0
pop pointer 0
push this 8
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 3
pop local 0
push this 4
pop local 1
push this 2
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
push constant 1
add
pop local 0
label IF_FALSE1
push this 2
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 4
push constant 1
sub
pop local 1
label IF_FALSE2
push this 2
push constant 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 3
push constant 1
sub
pop local 0
label IF_FALSE3
push this 2
push constant 3
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 4
push constant 1
add
pop local 1
label IF_FALSE4
push local 0
push constant 0
lt
push local 0
push constant 31
gt
or
push local 1
push constant 0
lt
or
push local 1
push constant 15
gt
or
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
pop this 8
push constant 0
return
label IF_FALSE5
push pointer 0
push local 0
push local 1
call Snake.checkCollisionWithBody 3
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
not
pop this 8
push constant 0
return
label IF_FALSE6
push local 0
push this 5
eq
push local 1
push this 6
eq
and
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 7
push constant 10
add
pop this 7
push this 1
push constant 1
add
pop this 1
push pointer 0
call Snake.generateFood 1
pop temp 0
goto IF_END7
label IF_FALSE7
push this 1
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
push constant 32
call Math.divide 2
pop local 2
push this 1
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
push local 2
push constant 32
call Math.multiply 2
sub
pop local 3
push pointer 0
push local 2
push constant 16
call Math.multiply 2
push local 3
push constant 16
call Math.multiply 2
push constant 0
call Snake.drawSegment 4
pop temp 0
label IF_END7
push this 1
push constant 1
sub
pop local 4
label WHILE_EXP0
push local 4
push constant 0
gt
not
if-goto WHILE_END0
push local 4
push this 0
add
push local 4
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push constant 1
sub
pop local 4
goto WHILE_EXP0
label WHILE_END0
push local 0
pop this 3
push local 1
pop this 4
push constant 0
push this 0
add
push this 3
push constant 32
call Math.multiply 2
push this 4
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push this 3
push constant 16
call Math.multiply 2
push this 4
push constant 16
call Math.multiply 2
push constant 0
not
call Snake.drawSegment 4
pop temp 0
push constant 0
return
function Snake.changeDirection 0
push argument 0
pop pointer 0
push this 2
push constant 0
eq
push argument 1
push constant 2
eq
and
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push constant 1
eq
push argument 1
push constant 3
eq
and
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push constant 2
eq
push argument 1
push constant 0
eq
and
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 2
push constant 3
eq
push argument 1
push constant 1
eq
and
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 1
pop this 2
label IF_FALSE3
label IF_FALSE2
label IF_FALSE1
label IF_FALSE0
push constant 0
return
function Snake.getScore 0
push argument 0
pop pointer 0
push this 7
return
function Snake.isGameOver 0
push argument 0
pop pointer 0
push this 8
return
function Snake.displayScore 0
push argument 0
pop pointer 0
push constant 0
push constant 0
call Output.moveCursor 2
pop temp 0
push constant 7
call String.new 1
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 7
call Output.printInt 1
pop temp 0
push constant 10
call String.new 1
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 76
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 103
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 1
call Output.printInt 1
pop temp 0
push constant 0
return
function Snake.getHeadX 0
push argument 0
pop pointer 0
push this 3
return
function Snake.getHeadY 0
push argument 0
pop pointer 0
push this 4
return
function Snake.getFoodX 0
push argument 0
pop pointer 0
push this 5
return
function Snake.getFoodY 0
push argument 0
pop pointer 0
push this 6
return
function Snake.getTailX 1
push argument 0
pop pointer 0
push this 1
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
push constant 32
call Math.divide 2
return
label IF_FALSE0
push this 3
return
function Snake.getTailY 1
push argument 0
pop pointer 0
push this 1
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
push local 0
push constant 32
call Math.divide 2
push constant 32
call Math.multiply 2
sub
return
label IF_FALSE0
push this 4
return
function Snake.isDirectionSafe 2
push argument 0
pop pointer 0
push this 3
pop local 0
push this 4
pop local 1
push argument 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push constant 1
add
pop local 0
label IF_FALSE0
push argument 1
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 4
push constant 1
sub
pop local 1
label IF_FALSE1
push argument 1
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 3
push constant 1
sub
pop local 0
label IF_FALSE2
push argument 1
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 4
push constant 1
add
pop local 1
label IF_FALSE3
push local 0
push constant 0
lt
push local 0
push constant 31
gt
or
push local 1
push constant 0
lt
or
push local 1
push constant 15
gt
or
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
return
label IF_FALSE4
push pointer 0
push local 0
push local 1
call Snake.checkCollisionWithBody 3
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
return
label IF_FALSE5
push constant 0
not
return
function Snake.getLength 0
push argument 0
pop pointer 0
push this 1
return
